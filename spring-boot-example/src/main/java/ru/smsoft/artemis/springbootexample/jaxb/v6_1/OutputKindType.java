//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.09.21 at 08:15:35 PM MSK 
//


package ru.smsoft.artemis.springbootexample.jaxb.v6_1;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for OutputKindType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="OutputKindType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Personally"/&gt;
 *     &lt;enumeration value="Telephone"/&gt;
 *     &lt;enumeration value="Portal"/&gt;
 *     &lt;enumeration value="EMail"/&gt;
 *     &lt;enumeration value="Mail"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "OutputKindType")
@XmlEnum
public enum OutputKindType {


    /**
     * Вручить лично
     * 
     */
    @XmlEnumValue("Personally")
    PERSONALLY("Personally"),

    /**
     * Передать в устной форме по телефону
     * 
     */
    @XmlEnumValue("Telephone")
    TELEPHONE("Telephone"),

    /**
     * Направить через Портал
     * 
     */
    @XmlEnumValue("Portal")
    PORTAL("Portal"),

    /**
     * Направить по электронной почте
     * 
     */
    @XmlEnumValue("EMail")
    E_MAIL("EMail"),

    /**
     * Направить по почте
     * 
     */
    @XmlEnumValue("Mail")
    MAIL("Mail");
    private final String value;

    OutputKindType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static OutputKindType fromValue(String v) {
        for (OutputKindType c: OutputKindType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
